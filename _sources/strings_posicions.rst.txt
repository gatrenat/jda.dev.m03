############################
String: seqüència de lletres
############################

Fins ara, els Strings els hem tractat de manera atòmica; és a dir, com un
valor indivisible. Per exemple, els hem llegit, escrit, comparat o
assignat en bloc.

Considera la següent assignació:

.. code-block:: java

    String nom = "Ritchie";

El resultat d'executar-ho serà un espai de memòria al que ens podrem
referir amb el nom de variable ``nom`` que contindrà les set lletres
``R``, ``i``, ``t``, ``c``, ``h``, ``i`` i ``e``.

Tot i que :doc:`ja sabem <strings_tipus>` que ``nom`` conté en realitat la
referència on es troba el valor i no el valor, ho simplificarem en el
següent diagrama de la següent manera:

.. image:: _images/string_ritchie.png
   :align: center

Hem de tenir en compte, però, que els *strings* són bàsicament seqüències o
cadenes de lletres, i que les lletres són també un tipus de dades, en
concret `char`.

Podria tenir sentit accedir també de manera individual als elements d'un String?

Doncs bé, d'això va aquest nou tema.

Considera la següent interacció a jshell

.. code-block:: none
    :emphasize-lines: 2, 5, 8, 11, 14

    jshell> String s = "Ameba";     // declarem i inicialitzem un String
    s ==> "Ameba"

    jshell> char primeraLletra = s.charAt(0); // obtenim el primer caràcter
    primeraLletra ==> 'A'

    jshell> s.charAt(1);            // obtenim el segon caràcter
    $3 ==> 'm'

    jshell> s.length();             // obtenim la longitud del String
    $4 ==> 5

    jshell> s.charAt(s.length()-1); // obtenim el darrer caràcter del String
    $5 ==> 'a'

    jshell> s.charAt(s.length());   // intentem aconseguir un caràcter fora de rang
    |  Exception java.lang.StringIndexOutOfBoundsException: String index out of range: 5
    |        at StringLatin1.charAt (StringLatin1.java:47)
    |        at String.charAt (String.java:693)
    |        at (#6:1)


Fixa't com podem accedir a cada caràcter amb la utilitat ``charAt()`` tot
posant entre els parèntesis la posició del caràcter a obtenir. Les
posicions comencen pel número 0 i, per tant, la darrera posició correspon
al nombre de caràcters que conté la cadena menys un.

Podem saber quants caràcters té un String amb la utilitat ``length()``.
Donat que és una seqüència, el nom de la utilitat retorna la *longitud*.

Finalment, si ens passem de posició i demanem a ``charAt()`` una fora de
rang, ens trobarem amb un error que indica clarament que ens hem anat fora
de la cadena.

Juguem una mica
===============

En els següents exercicis treballarem l'accés a diferents lletres d'un
String. Se t'oferiran noves funcions de Java que podràs fer servir en
successius exercicis, a menys que explícitament t'indiquin el contrari.

Recorda: tot i que hi ha moltes funcions que ens ofereix Java que ens
podrien simplificar els nostres codis, el nostre objectiu no és tant
resoldre els problemes si no aprendre a programar. És a dir, fes servir
**només** el que et vagin oferint aquests continguts.

Et recomano que ampliïs les teves anotacions del :doc:`resum de comandes
<exercici_00_03_resum_comandes>` amb les funcions que et vagi presentant.
En cas que trobis d'altres, és important
que les marquis com a **no permeses** en els exercicis base ni a les
proves d'aquest curs.

|exerciseicon__T| :doc:`exercici_14_03_informecaracter`

|exerciseicon__T| :doc:`exercici_14_04_manipulant_strings`

|exerciseicon__T| :doc:`exercici_14_05_vocalmin`

|exerciseicon__T| :doc:`exercici_14_06_vocalinifi`

|exerciseicon__T| :doc:`exercici_14_07_lletrafi`

|exerciseicon__T| :doc:`exercici_14_08_extremspermutats`

|exerciseicon__T| :doc:`exercici_14_09_matricula_italiana`

|exerciseiconOS_| :doc:`exercici_14_10_matricula_valida_ampliada`

|exerciseicon__T| :doc:`exercici_14_11_analisi_caracter`

