#####################################################
|exerciseicon__T| Exercici 14_02. Informe d'un String
#####################################################

.. rubric:: Context

* Carpeta de lliurament: ``14_02_informestring/``

* Continguts relacionats: :doc:`strings_tipus`

* Com lliurar-lo: :ref:`instruccions <instruccions_git>`

* [✓] Exercici amb :ref:`autoavaluació<descripcio_exercicis_autoavaluacio>`

.. rubric:: Enunciat

Per manipular un tipus de dades tan especial com és String, Java ens
ofereix una sèrie d'utilitats.

Per exemple, ``cadena.length()`` ens indica el nombre de caràcters que
té la cadena. És a dir, la seva longitud.

D'entre les `moltes opcions
<https://docs.oracle.com/en/java/javase/13/docs/api/java.base/java/lang/String.html>`_
que ens ofereix Java, en considerarem les següents:

========================================    ====================================================
utilitat                                    descripció
----------------------------------------    ----------------------------------------------------

``length()``                                Longitud de la cadena

``startsWith(String unAltre)``              Boolean que indica si la cadena comença per l'altre

``endsWith(String unAltre)``                Boolean que indica si la cadena finalitza amb l'altre

``equals(String unAltre)``                  Boolean que indica si la cadena és igual a l'altre

``equalsIgnoreCase(String unAltre)``        Boolean que indica si la cadena és igual a l'altre
                                            ignorant majúscules

``isBlank()``                               Boolean que indica si la cadena només conté caràcters
                                            blancs o bé està buida

``isEmpty()``                               Boolean que indica si la cadena està buida

``charAt(int posicio)``                     Caràcter a la posició indicada

``concat(String unAltre)``                  Cadena resultant de concatenar la cadena amb l'altre

``repeat(int cops)``                        Cadena repetida el nombre de cops indicat

``toUpperCase()``                           Cadena amb tot en majúscules

``toLowerCase()``                           Cadena amb tot en minúscules

========================================    ====================================================

Què hem de fer?
===============

Desenvolupa un programa anomenat ``InformeString`` que demani dos texts i un
enter positiu i composi un petit informe amb el resultat de les funcions
anteriors.

Considera la següent simulació:

.. code-block:: console
    :emphasize-lines: 2, 4, 6

    Text principal?
    They're eating the dogs!
    Text secundari?
    They
    Número positiu?
    3
    "They're eating the dogs!".length(): 24
    "They're eating the dogs!".startsWith("They"): true
    "They're eating the dogs!".endsWith("They"): false
    "They're eating the dogs!".equals("They"): false
    "They're eating the dogs!".equalsIgnoreCase("They"): false
    "They're eating the dogs!".isBlank(): false
    "They're eating the dogs!".isEmpty(): false
    "They're eating the dogs!".charAt(3): y
    "They're eating the dogs!".concat("They"): They're eating the dogs!They
    "They're eating the dogs!".repeat(3): They're eating the dogs!They're eating the dogs!They're eating the dogs!
    "They're eating the dogs!".toUpperCase(): THEY'RE EATING THE DOGS!
    "They're eating the dogs!".toLowerCase(): they're eating the dogs!


La gràcia és que vegis com es comporta cada utilitat quan li dónes
diferents valors i no tant que passis les proves.

Et proposo que juguis una mica amb el teu programa, de manera que
aconsegueixis que cada utilitat que retorna un valor booleà, respongui
``true``.


Nota: No et preocupis per fer comprovacions de límits.
