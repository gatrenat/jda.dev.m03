##############
Adéu plantilla
##############

No hi ha res per sempre, i la plantilla de la nostra *infantessa* com a
desenvolupadores i desenvolupadors no és una excepció.

Tornem a considerar el programa ``Quadrat``.

.. code-block:: java
    :linenos:

    /* Programa que dibuixa un quadrat de 5x5 */
    public class Quadrat {
        public static void main(String[] args) {
            // dibuixa un quadrat
            for (int linia=1; linia <= 5; linia++) {
                // dibuixa una línia
                for (int columna=1; columna <= 5; columna++) {
                    // dibuixa un element de la línia
                    System.out.print(" X");
                }
                // dibuixa un salt de línia
                System.out.println();
            }
        }
    }

Fixa't ara en el següent canvi:

.. code-block:: java
    :linenos:
    :emphasize-lines: 4, 7-17

    /* Programa que dibuixa un quadrat de 5x5 */
    public class Quadrat {
        public static void main(String[] args) {
            dibuixaQuadrat();
        }

        public static void dibuixaQuadrat() {
            for (int linia=1; linia <= 5; linia++) {
                // dibuixa una línia
                for (int columna=1; columna <= 5; columna++) {
                    // dibuixa un element de la línia
                    System.out.print(" X");
                }
                // dibuixa un salt de línia
                System.out.println();
            }
        }
    }

Quan executem aquest nou programa, obtenim la mateixa resposta que amb
l'anterior. És a dir, d'alguna manera, els dos programes són equivalents!

Analitzem-ho.

Les dues versions són iguals fins la línia 4, on, en comptes d'aparèixer
el comentari que indicava que a continuació es dibuixaria un quadrat,
seguit del bucle que el dibuixava, ens trobem amb un compacte
``dibuixaQuadrat();`` seguit del tancament del bloc del ``main()``!

Donat que dins de ``main()`` no hi ha res més i que el programa dibuixa el
mateix que la versió original, hem de deduir que la línia 4 està fent el
que diu: *dibuixar el quadrat*!

El que ve a continuació del bloc del ``main()`` també és nou. Per
començar, després del bloc del ``main()`` **hi ha quelcom**!
Això és una novetat important respecte tot el que hem fet
fins ara. Després del ``main()`` només hi havia el tancament del bloc de
``class``.

El que apareix, però, presenta una estructura coneguda, oi? Pràcticament
és el bloc del ``main()`` de la versió original del programa ``Quadrat``.
La única diferència està en que en comptes de l'habitual ``main(String[]
args)`` apareix ``dibuixaQuadrat()``, que coincideix amb el que apareix a
la línia 4.

Què serà aquest ``dibuixaQuadrat()``?

Doncs, depenent d'allà on apareix del codi, és una cosa o una altra:

* a la línia 7 serveix per indicar que el codi que hi ha entre les línies 8 i
  16 *s'anomenarà* ``dibuixaQuadrat``.

* la línia 4 està *invocant* o *cridant* la definició anterior. És a dir,
  quan s'executa ``dibuixaQuadrat()`` de la línia 4, és com si es passés a
  la línia 8 i el codi continués executant-se fins finalitzar el bloc.

  El que no queda clar és què fa en finalitzar el bloc, és a dir, en
  arribar a la línia 17. Fins on podem veure en aquest codi, el programa
  finalitza en aquell mateix moment.

Ben bé és com quan definíem una variable:

.. code-block:: java

    int linia = 18;
    System.out.println(linia);

A la primera línia declarem (i inicialitzem) la variable ``linia``, mentre
que a la segona *invoquem* el seu valor. A banda que ara no parlem de
dades sinó de codi, una altra diferència evident és que aparentment a
``dibuixaQuadrat`` l'estem *invocant* abans de declarar-lo. A més a més,
el tipus de ``linia`` és ``int`` però, quin serà el tipus de
``dibuixaQuadrat``? Podria ser aquest misteriós ``void``? I la
inicialització? És possible que en comptes de fer servir ``=``, estiguem
inicialitzant ``dibuixaQuadrat`` amb el que ve entre ``{}``?

Moltes preguntes que hem d'anar responent.

|exerciseicon__T| :doc:`exercici_16_02_quadrats_modul`
