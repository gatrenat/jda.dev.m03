######################################################
|exerciseicon__T| Exercici 14_20. Endevina amb control
######################################################

.. rubric:: Context

* Carpeta de lliurament: ``14_20_endevinacontrolat/``

* Continguts relacionats: :doc:`control_continue`

* Com lliurar-lo: :ref:`instruccions <instruccions_git>`

* [✓] Exercici amb :ref:`autoavaluació<descripcio_exercicis_autoavaluacio>`

.. rubric:: Enunciat

Recordes :doc:`exercici_12_10_endevina` ?

En aquesta ocasió farem una nova versió que faci ús dels nous mecanismes
de control de bucles.

El programa realitzarà la mateixa funcionalitat que l'exercici original,
més:

* Permetrà cancel·lar la partida en introduir una entrada buida (tal i com
  demanava :doc:`exercici_12_11_endevina_cancel`

* Comprovarà que l'entrada siguin realment valors enters.

  Serà una comprovació més senzilla que la que demanava l'exercici 
  :doc:`exercici_14_17_enterestricte` en el sentit que no cal ignorar espais, ni considerar separadors. Només cal tenir en compte dígits i, opcionalment, que comencin amb un ``+`` o un ``-``.
  Ah! i només cal comprovar els valors de l'entrada estàndard. El de línia de comandes es pot suposar sempre enter.

Un exemple d'execució, suposant novament que ens entren ``42`` per línia de
comandes, seria:


.. code-block:: console
    :emphasize-lines: 2, 4, 5, 7, 8, 10, 11, 13, 14

    Nombre?
    cinc
    Només nombres
    Nombre?
    50
    Massa gran
    Nombre?
    0
    Fora de rang
    Nombre?
    101
    Fora de rang
    Nombre?

    Cancel·lat!

.. note:: Aquest exercici és una bona oportunitat per practicar els
          elements de control de bucles que hem estudiat a aquesta secció.
          Amb tot, si ho prefereixes, pots resoldre'l sense usar-los.
