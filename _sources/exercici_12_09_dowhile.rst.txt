######################################################
|exerciseiconO_T| Exercici 12_09. La condició al final
######################################################

.. rubric:: Context

* Carpeta de lliurament: ``12_09_dowhile/``

* Continguts relacionats: :doc:`while_exercicis`

* Com lliurar-lo: :ref:`instruccions <instruccions_git>`

* [☼] Exercici :ref:`optatiu<descripcio_exercicis_optatius>`

* [✓] Exercici amb :ref:`autoavaluació<descripcio_exercicis_autoavaluacio>`

.. rubric:: Enunciat


Java ofereix una versió del bucle ``while`` diferent de la
que hem vist. És coneix com a ``do-while`` i funciona pràcticament igual a
la que hem vist, excepte que la condició s'avalua després d'executar el
bucle.

Trobaràs més informació per exemple a la documentació oficial del
llenguatge: https://docs.oracle.com/javase/tutorial/java/nutsandbolts/while.html

Tot que es pugui fer amb ``while`` es pot fer amb ``do-while`` (i
viceversa) Tant és així, que alguns llenguatges ni tant sols incorporen el
``do-while`` mentre que d'altres ofereixen més alternatives (com ara
*repeteix fins que*) Sovint es queda en una qüestió de preferències, però
està bé que ho coneguis.

Et proposo que realitzis el següent exercici amb ``do-while``

Desenvolupa un programa anomenat `SequenciaCreixent`, que vagi demanant nombres
enters creixents i s'aturi en el moment que s'introdueixi un que no és més gran
que l'anterior. Finalment, el programa indicarà la longitud de la seqüència
introduïda, és a dir, quants valors s'han introduït de manera creixent.

Un exemple d'execució seria:

.. code-block:: console
    :emphasize-lines: 2, 4, 6, 8, 10, 12

    Introdueix un valor
    2
    Introdueix un valor
    4
    Introdueix un valor
    8
    Introdueix un valor
    16
    Introdueix un valor
    32
    Introdueix un valor
    32
    Longitud de la següència creixent: 5
